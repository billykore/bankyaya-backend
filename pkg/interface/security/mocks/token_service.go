// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entity "go.bankyaya.org/app/backend/pkg/entity"

	time "time"
)

// TokenService is an autogenerated mock type for the TokenService type
type TokenService struct {
	mock.Mock
}

// Create provides a mock function with given fields: user, duration
func (_m *TokenService) Create(user *entity.User, duration time.Duration) (entity.Token, error) {
	ret := _m.Called(user, duration)

	var r0 entity.Token
	var r1 error
	if rf, ok := ret.Get(0).(func(*entity.User, time.Duration) (entity.Token, error)); ok {
		return rf(user, duration)
	}
	if rf, ok := ret.Get(0).(func(*entity.User, time.Duration) entity.Token); ok {
		r0 = rf(user, duration)
	} else {
		r0 = ret.Get(0).(entity.Token)
	}

	if rf, ok := ret.Get(1).(func(*entity.User, time.Duration) error); ok {
		r1 = rf(user, duration)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTokenService interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenService creates a new instance of TokenService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenService(t mockConstructorTestingTNewTokenService) *TokenService {
	mock := &TokenService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
