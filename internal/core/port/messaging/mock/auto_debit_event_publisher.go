// Code generated by mockery v2.20.0. DO NOT EDIT.

package messagingmock

import (
	context "context"

	entity "go.bankyaya.org/app/backend/internal/core/entity"

	mock "github.com/stretchr/testify/mock"
)

// AutoDebitEventPublisher is an autogenerated mock type for the AutoDebitEventPublisher type
type AutoDebitEventPublisher struct {
	mock.Mock
}

type AutoDebitEventPublisher_Expecter struct {
	mock *mock.Mock
}

func (_m *AutoDebitEventPublisher) EXPECT() *AutoDebitEventPublisher_Expecter {
	return &AutoDebitEventPublisher_Expecter{mock: &_m.Mock}
}

// Publish provides a mock function with given fields: ctx, event
func (_m *AutoDebitEventPublisher) Publish(ctx context.Context, event *entity.TransferRequest) error {
	ret := _m.Called(ctx, event)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.TransferRequest) error); ok {
		r0 = rf(ctx, event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AutoDebitEventPublisher_Publish_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Publish'
type AutoDebitEventPublisher_Publish_Call struct {
	*mock.Call
}

// Publish is a helper method to define mock.On call
//   - ctx context.Context
//   - event *entity.TransferRequest
func (_e *AutoDebitEventPublisher_Expecter) Publish(ctx interface{}, event interface{}) *AutoDebitEventPublisher_Publish_Call {
	return &AutoDebitEventPublisher_Publish_Call{Call: _e.mock.On("Publish", ctx, event)}
}

func (_c *AutoDebitEventPublisher_Publish_Call) Run(run func(ctx context.Context, event *entity.TransferRequest)) *AutoDebitEventPublisher_Publish_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entity.TransferRequest))
	})
	return _c
}

func (_c *AutoDebitEventPublisher_Publish_Call) Return(_a0 error) *AutoDebitEventPublisher_Publish_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AutoDebitEventPublisher_Publish_Call) RunAndReturn(run func(context.Context, *entity.TransferRequest) error) *AutoDebitEventPublisher_Publish_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewAutoDebitEventPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewAutoDebitEventPublisher creates a new instance of AutoDebitEventPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAutoDebitEventPublisher(t mockConstructorTestingTNewAutoDebitEventPublisher) *AutoDebitEventPublisher {
	mock := &AutoDebitEventPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
